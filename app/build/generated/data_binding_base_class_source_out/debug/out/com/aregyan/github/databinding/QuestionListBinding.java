// Generated by view binder compiler. Do not edit!
package com.aregyan.github.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RadioButton;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.aregyan.github.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class QuestionListBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout rlAnswerA;

  @NonNull
  public final RelativeLayout rlAnswerB;

  @NonNull
  public final RelativeLayout rlAnswerC;

  @NonNull
  public final RelativeLayout rlAnswerD;

  @NonNull
  public final RelativeLayout rlAnswerE;

  @NonNull
  public final RelativeLayout rlAnswerF;

  @NonNull
  public final RelativeLayout rlSubmit;

  @NonNull
  public final TextView tvAnswerOptionA;

  @NonNull
  public final RadioButton tvAnswerOptionB;

  @NonNull
  public final RadioButton tvAnswerOptionC;

  @NonNull
  public final RadioButton tvAnswerOptionD;

  @NonNull
  public final RadioButton tvAnswerOptionE;

  @NonNull
  public final RadioButton tvAnswerOptionF;

  @NonNull
  public final TextView tvrlSubmit;

  private QuestionListBinding(@NonNull RelativeLayout rootView, @NonNull RelativeLayout rlAnswerA,
      @NonNull RelativeLayout rlAnswerB, @NonNull RelativeLayout rlAnswerC,
      @NonNull RelativeLayout rlAnswerD, @NonNull RelativeLayout rlAnswerE,
      @NonNull RelativeLayout rlAnswerF, @NonNull RelativeLayout rlSubmit,
      @NonNull TextView tvAnswerOptionA, @NonNull RadioButton tvAnswerOptionB,
      @NonNull RadioButton tvAnswerOptionC, @NonNull RadioButton tvAnswerOptionD,
      @NonNull RadioButton tvAnswerOptionE, @NonNull RadioButton tvAnswerOptionF,
      @NonNull TextView tvrlSubmit) {
    this.rootView = rootView;
    this.rlAnswerA = rlAnswerA;
    this.rlAnswerB = rlAnswerB;
    this.rlAnswerC = rlAnswerC;
    this.rlAnswerD = rlAnswerD;
    this.rlAnswerE = rlAnswerE;
    this.rlAnswerF = rlAnswerF;
    this.rlSubmit = rlSubmit;
    this.tvAnswerOptionA = tvAnswerOptionA;
    this.tvAnswerOptionB = tvAnswerOptionB;
    this.tvAnswerOptionC = tvAnswerOptionC;
    this.tvAnswerOptionD = tvAnswerOptionD;
    this.tvAnswerOptionE = tvAnswerOptionE;
    this.tvAnswerOptionF = tvAnswerOptionF;
    this.tvrlSubmit = tvrlSubmit;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static QuestionListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static QuestionListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.question_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static QuestionListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.rlAnswerA;
      RelativeLayout rlAnswerA = ViewBindings.findChildViewById(rootView, id);
      if (rlAnswerA == null) {
        break missingId;
      }

      id = R.id.rlAnswerB;
      RelativeLayout rlAnswerB = ViewBindings.findChildViewById(rootView, id);
      if (rlAnswerB == null) {
        break missingId;
      }

      id = R.id.rlAnswerC;
      RelativeLayout rlAnswerC = ViewBindings.findChildViewById(rootView, id);
      if (rlAnswerC == null) {
        break missingId;
      }

      id = R.id.rlAnswerD;
      RelativeLayout rlAnswerD = ViewBindings.findChildViewById(rootView, id);
      if (rlAnswerD == null) {
        break missingId;
      }

      id = R.id.rlAnswerE;
      RelativeLayout rlAnswerE = ViewBindings.findChildViewById(rootView, id);
      if (rlAnswerE == null) {
        break missingId;
      }

      id = R.id.rlAnswerF;
      RelativeLayout rlAnswerF = ViewBindings.findChildViewById(rootView, id);
      if (rlAnswerF == null) {
        break missingId;
      }

      id = R.id.rlSubmit;
      RelativeLayout rlSubmit = ViewBindings.findChildViewById(rootView, id);
      if (rlSubmit == null) {
        break missingId;
      }

      id = R.id.tvAnswerOptionA;
      TextView tvAnswerOptionA = ViewBindings.findChildViewById(rootView, id);
      if (tvAnswerOptionA == null) {
        break missingId;
      }

      id = R.id.tvAnswerOptionB;
      RadioButton tvAnswerOptionB = ViewBindings.findChildViewById(rootView, id);
      if (tvAnswerOptionB == null) {
        break missingId;
      }

      id = R.id.tvAnswerOptionC;
      RadioButton tvAnswerOptionC = ViewBindings.findChildViewById(rootView, id);
      if (tvAnswerOptionC == null) {
        break missingId;
      }

      id = R.id.tvAnswerOptionD;
      RadioButton tvAnswerOptionD = ViewBindings.findChildViewById(rootView, id);
      if (tvAnswerOptionD == null) {
        break missingId;
      }

      id = R.id.tvAnswerOptionE;
      RadioButton tvAnswerOptionE = ViewBindings.findChildViewById(rootView, id);
      if (tvAnswerOptionE == null) {
        break missingId;
      }

      id = R.id.tvAnswerOptionF;
      RadioButton tvAnswerOptionF = ViewBindings.findChildViewById(rootView, id);
      if (tvAnswerOptionF == null) {
        break missingId;
      }

      id = R.id.tvrlSubmit;
      TextView tvrlSubmit = ViewBindings.findChildViewById(rootView, id);
      if (tvrlSubmit == null) {
        break missingId;
      }

      return new QuestionListBinding((RelativeLayout) rootView, rlAnswerA, rlAnswerB, rlAnswerC,
          rlAnswerD, rlAnswerE, rlAnswerF, rlSubmit, tvAnswerOptionA, tvAnswerOptionB,
          tvAnswerOptionC, tvAnswerOptionD, tvAnswerOptionE, tvAnswerOptionF, tvrlSubmit);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
