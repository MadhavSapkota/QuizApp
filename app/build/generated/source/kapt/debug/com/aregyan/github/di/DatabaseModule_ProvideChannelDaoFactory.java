// Generated by Dagger (https://dagger.dev).
package com.aregyan.github.di;

import com.aregyan.github.database.QuestionDao;
import com.aregyan.github.database.UserDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DatabaseModule_ProvideChannelDaoFactory implements Factory<QuestionDao> {
  private final Provider<UserDatabase> usersDatabaseProvider;

  public DatabaseModule_ProvideChannelDaoFactory(Provider<UserDatabase> usersDatabaseProvider) {
    this.usersDatabaseProvider = usersDatabaseProvider;
  }

  @Override
  public QuestionDao get() {
    return provideChannelDao(usersDatabaseProvider.get());
  }

  public static DatabaseModule_ProvideChannelDaoFactory create(
      Provider<UserDatabase> usersDatabaseProvider) {
    return new DatabaseModule_ProvideChannelDaoFactory(usersDatabaseProvider);
  }

  public static QuestionDao provideChannelDao(UserDatabase usersDatabase) {
    return Preconditions.checkNotNullFromProvides(DatabaseModule.INSTANCE.provideChannelDao(usersDatabase));
  }
}
