// Generated by Dagger (https://dagger.dev).
package com.aregyan.github.repository;

import com.aregyan.github.database.UsersDatabase;
import com.aregyan.github.network.UserDetailsService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class UserListRepository_Factory implements Factory<UserListRepository> {
  private final Provider<UserDetailsService> userListServiceProvider;

  private final Provider<UsersDatabase> databaseProvider;

  public UserListRepository_Factory(Provider<UserDetailsService> userListServiceProvider,
      Provider<UsersDatabase> databaseProvider) {
    this.userListServiceProvider = userListServiceProvider;
    this.databaseProvider = databaseProvider;
  }

  @Override
  public UserListRepository get() {
    return newInstance(userListServiceProvider.get(), databaseProvider.get());
  }

  public static UserListRepository_Factory create(
      Provider<UserDetailsService> userListServiceProvider,
      Provider<UsersDatabase> databaseProvider) {
    return new UserListRepository_Factory(userListServiceProvider, databaseProvider);
  }

  public static UserListRepository newInstance(UserDetailsService userListService,
      UsersDatabase database) {
    return new UserListRepository(userListService, database);
  }
}
